/* ------------------------------------------------------------------------------
 * Copyright (c) 2006 Novell, Inc. All Rights Reserved.
 *
 *
 * This program is free software; you can redistribute it and/or modify it under
 * the terms of version 2 of the GNU General Public License as published by the
 * Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, contact Novell, Inc.
 *
 * To contact Novell about this file by physical or electronic mail, you may find
 * current contact information at www.novell.com.
 * ------------------------------------------------------------------------------
 */

/**
 * File:	clients/fingerprint-reader.ycp
 * Package:	Configuration of fingerprint-reader
 * Summary:	Main file
 * Authors:	Jiri Suchomel <jsuchome@suse.cz>
 *
 * $Id$
 *
 * Main file for fingerprint-reader configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of fingerprint-reader</h3>
 */

textdomain "fingerprint-reader";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("FingerprintReader module started");

import "Progress";
import "Report";
import "Summary";

import "CommandLine";
include "fingerprint-reader/wizards.ycp";

map cmdline_description = $[
    "id" 	: "fingerprint-reader",
    /* Command line help text for the Xfingerprint-reader module */
    "help"	: _("Configuration of fingerprint-reader"),
    "guihandler"        : FingerprintReaderSequence,
    "initialize"        : FingerprintReader::Read,
    "finish"            : FingerprintReader::Write,
    "actions"           : $[
	// FIXME TODO: fill the functionality description here
    ],
    "options"		: $[
	// FIXME TODO: fill the option descriptions here
    ],
    "mappings"		: $[
	// FIXME TODO: fill the mappings of actions and options here
    ]
];

/* is this proposal or not? */
boolean propose = false;
list args = WFM::Args();
if(size(args) > 0) {
    if(is(WFM::Args(0), path) && WFM::Args(0) == .propose) {
        y2milestone("Using PROPOSE mode");
        propose = true;
    }
}

/* main ui function */
any ret = nil;

if(propose) ret = FingerprintReaderAutoSequence();
else ret = CommandLine::Run(cmdline_description);
y2debug("ret=%1", ret);

/* Finish */
y2milestone("FingerprintReader module finished");
y2milestone("----------------------------------------");

return ret;

/* EOF */
}
